# Wasabi S3 Credentials Secret
apiVersion: v1
kind: Secret
metadata:
  name: wasabi-credentials
  namespace: default
type: Opaque
data:
  access-key: WDdTTVdGQklNSEs3NjFNWkRDTTQ=  # X7SMWFBIMHK761MZDCM4 (base64)
  secret-key: SGVDakk5enNXZTZsZW1oNDJmbUNDdWdmeUYwNmY3elhseWI5VlkwRw==  # HeCjI9zsWe6lemh42fmCCugfyF06f7zXlyb9VY0G (base64)

---
# JWT Authentication Secret
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: default
type: Opaque
data:
  token: dGVzdC1qd3QtdG9rZW4=  # test-jwt-token (base64)

---
# Database initialization script
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-init-script
  namespace: default
data:
  init.sql: |
    -- Create users table
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        username TEXT UNIQUE NOT NULL,
        email TEXT UNIQUE NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create products table
    CREATE TABLE IF NOT EXISTS products (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        price REAL NOT NULL,
        description TEXT,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create orders table
    CREATE TABLE IF NOT EXISTS orders (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        product_id INTEGER NOT NULL,
        quantity INTEGER NOT NULL,
        total_price REAL NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id),
        FOREIGN KEY (product_id) REFERENCES products(id)
    );
    
    -- Insert sample data
    INSERT OR IGNORE INTO users (username, email) VALUES 
        ('john_doe', 'john@example.com'),
        ('jane_smith', 'jane@example.com');
    
    INSERT OR IGNORE INTO products (name, price, description) VALUES 
        ('Laptop', 999.99, 'High-performance laptop'),
        ('Mouse', 29.99, 'Wireless mouse'),
        ('Keyboard', 79.99, 'Mechanical keyboard');
    
    INSERT OR IGNORE INTO orders (user_id, product_id, quantity, total_price) VALUES 
        (1, 1, 1, 999.99),
        (1, 2, 2, 59.98),
        (2, 3, 1, 79.99);
